{"version":3,"sources":["components/Navbar.js","components/Products.js","queries/Queries.js","components/Sidebar.js","components/Dashboard.js","App.js","constants.js","registerServiceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","Fragment","class","className","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","Component","Products","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addToCart","elem","toggleDrawer","state","setState","setDrawerToggle","setElemData","_this2","_this$props","currency","src","image_url","alt","title","price","onClick","React","fetchCurrencyQuery","gql","_templateObject","taggedTemplateLiteral","fetchProductsQuery","_templateObject2","SideBar","handleChange","e","value","target","onSetSidebarClose","sbo","increment","newA","cart","incFunc","decrement","decFunc","array","match","key","forEach","elemId","totalPrice","query","console","log","arr","val","i","length","getNewPrices","count","push","reduce","b","splice","parseFloat","filter","cde","total","prevProps","prevState","drawer","productArr","concat","toConsumableArray","findProductInCart","_this3","es_drawer","placement","closable","onClose","visible","defaultValue","onChange","react_apollo_esm","_ref","loading","error","data","map","size","style","cursor","name","variables","_ref2","el","products","width","Dashboard","currencySetValue","drawerToggle","drawerTog","getElemData","selectedElem","_this$state","components_Navbar","Sidebar","components_Products","link","HttpLink","uri","client","ApolloClient","cache","InMemoryCache","App","Switch","Route","path","exact","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","require","config","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4fdaee6c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <>\n        <nav class=\"navbar navbar-dark bg-dark\">\n          <div class=\"container-fluid\">\n            <a className=\"navbar-brand mr-auto pl-md-5\" href=\"/\">\n              <span className=\"pl-md-5 pl-5\">Lumin</span>\n            </a>\n            <button\n              class=\"navbar-toggler\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#navbarToggleExternalContent\"\n              aria-controls=\"navbarToggleExternalContent\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n            >\n              <span class=\"navbar-toggler-icon\"></span>\n            </button>\n          </div>\n        </nav>\n        <div class=\"collapse\" id=\"navbarToggleExternalContent\">\n          <div class=\"bg-dark p-4\">\n            <h5 class=\"text-white h4\">Collapsed content</h5>\n            <span class=\"text-muted\">Toggleable via the navbar brand.</span>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"../App.css\";\n\nclass Products extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggleDrawer: true,\n    };\n  }\n\n  addToCart = (elem) => {\n    let { toggleDrawer } = this.state;\n    this.setState({ toggleDrawer: true }, () => {\n      this.props.setDrawerToggle(toggleDrawer);\n      this.props.setElemData(elem);\n    });\n  };\n\n  render() {\n    const { elem, currency } = this.props;\n    return (\n      <>\n        <div className=\"product-tile text-center py-4\">\n          <div className=\"img\">\n            <img className=\"img-fluid\" src={elem.image_url} alt={elem.title} />\n          </div>\n          <div className=\"mt-4 \">\n            <h5>{elem.title}</h5>\n          </div>\n          <div>\n            <h5>{currency + \" \" + elem.price}</h5>\n          </div>\n          <div\n            className=\"addToCartBtn px-3 py-2\"\n            onClick={() => this.addToCart(elem)}\n          >\n            Add to Cart\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Products;\n","import gql from \"graphql-tag\";\n\n//query\n\nexport const fetchCurrencyQuery = gql`\n  query fetchCurrencyQuery {\n    currency\n  }\n`;\n\nexport const fetchProductsQuery = gql`\n  query fetchProductsQuery($currency: Currency!) {\n    products {\n      id\n      title\n      image_url\n      price(currency: $currency)\n      product_options {\n        title\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { fetchCurrencyQuery, fetchProductsQuery } from \"../queries/Queries\";\n// import Drawer from \"rc-drawer\";\n// import Todo from './Todo';\nimport \"../App.css\";\nimport { Drawer } from \"antd\";\n\nclass SideBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currency: \"EUR\",\n      sbo: false,\n      cart: [],\n      cde: {},\n      total: 0,\n    };\n  }\n\n  handleChange = (e) => {\n    let { value } = e.target;\n    this.setState({ currency: value }, () => {\n      this.props.currency(this.state.currency);\n    });\n  };\n\n  onSetSidebarClose = () => {\n    this.setState({ sbo: false }, () => {\n      this.props.setDrawerToggle(false);\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    let { addToCart, drawer } = this.props;\n\n    if (drawer !== prevProps.drawer) {\n      if (drawer) {\n        this.setState({ sbo: drawer });\n        if (addToCart.id && !prevState.cart.length) {\n          let productArr = [\n            ...prevState.cart,\n            { elemId: addToCart.id, elem: addToCart, count: 1 },\n          ];\n          console.log(\"wewe\", productArr);\n          this.setState({ cart: productArr });\n        } else if (addToCart.id && prevState.cart.length) {\n          let findProductInCart = prevState.cart.filter(\n            (elem) => elem.elemId === addToCart.id\n          );\n          if (findProductInCart.length) {\n            let productArr = prevState.cart; //[], [{}]\n            productArr.forEach((elem) => {\n              if (elem.elemId === findProductInCart[0].elemId) {\n                // findProductInCart = [];\n                return elem.count++;\n              }\n            });\n            console.log(\"wewea\", productArr);\n            this.setState({ cart: productArr }, () => {\n              console.log(\"eererer\", this.state.cart);\n            });\n          } else {\n            let productArr = [\n              ...prevState.cart,\n              { elemId: addToCart.id, elem: addToCart, count: 1 },\n            ];\n            console.log(\"wewe\", productArr);\n            this.setState({ cart: productArr });\n          }\n        }\n      }\n    }\n    if (this.props !== prevProps) {\n      console.log(\"pwpwe\", this.props, prevProps);\n    }\n  }\n\n  increment = (value) => {\n    let { cart } = this.state,\n      newA = cart;\n    newA = this.incFunc(newA, value, \"count\");\n    this.setState({ cart: newA });\n  };\n\n  decrement = (value) => {\n    let { cart } = this.state,\n      newA = cart;\n    newA = this.decFunc(newA, value, \"count\");\n    this.setState({ cart: newA });\n  };\n\n  incFunc = (array, match, key) => {\n    array.forEach((elem) => {\n      if (elem.elemId === match) {\n        return elem[key]++;\n      }\n    });\n    return array;\n  };\n  totalPrice = (query, cart) => {\n    console.log(\"4232-----3\", cart);\n    console.log(\"4232-----3\", cart);\n\n    let acc = 0,\n      arr = [],\n      val = 0;\n    for (let i = 0; i < cart.length; i++) {\n      val = this.getNewPrices(query, cart[i].elemId, cart[i].count);\n      console.log(\"4======3\", acc + val);\n      arr.push(val);\n    }\n    console.log(\"4======113\", arr);\n    return arr.length ? arr.reduce((a, b) => a + b) : 0;\n  };\n  decFunc = (array, match, key) => {\n    array.forEach((elem) => {\n      if (elem.elemId === match) {\n        elem[key]--;\n        if (elem[key] === 0) {\n          array.splice(0, elem.elemId);\n        }\n      }\n    });\n    return array;\n  };\n  getNewPrices = (array, id, count) => {\n    //  let {total} = this.state,\n    //  totalTemp = total ;\n    let price = parseFloat(array.filter((e) => e.id === id)[0].price) * count;\n    //  totalTemp = totalTemp+price;\n    //  this.setState({total: totalTemp});\n    return price;\n  };\n\n  render() {\n    let { currency } = this.state;\n    return (\n      <>\n        <Drawer\n          title=\"Your Cart\"\n          placement=\"right\"\n          closable={false}\n          onClose={this.onSetSidebarClose}\n          visible={this.state.sbo}\n        >\n          <select defaultValue=\"EUR\" onChange={(e) => this.handleChange(e)}>\n            <Query query={fetchCurrencyQuery}>\n              {({ loading, error, data }) => {\n                if (loading) {\n                  return <option>loading ...</option>;\n                }\n                if (error) {\n                  return <p>error</p>;\n                }\n                return data.currency.map((elem, i) => (\n                  <option key={i} value={elem}>\n                    {elem}\n                  </option>\n                ));\n              }}\n            </Query>\n          </select>\n          <ion-icon\n            size=\"large\"\n            style={{ cursor: \"pointer\" }}\n            onClick={() => this.onSetSidebarClose()}\n            name=\"chevron-forward-circle\"\n          ></ion-icon>\n          <Query query={fetchProductsQuery} variables={{ currency }}>\n            {({ loading, error, data }) => {\n              if (loading) {\n                return <option>loading ...</option>;\n              }\n              if (error) {\n                return <p>error</p>;\n              }\n              return (\n                <div>\n                  {this.state.cart.map((el) => (\n                    <div>\n                      <div className=\"bg_white_card\">\n                        <div>\n                          <div>{el.elem.title}</div>\n                          <div></div>\n                        </div>\n                        <div>\n                          <div className=\"\">\n                            <span onClick={() => this.decrement(el.elemId)}>\n                              -\n                            </span>{\" \"}\n                            {el.count}{\" \"}\n                            <span onClick={() => this.increment(el.elemId)}>\n                              +\n                            </span>\n                          </div>\n                          <div className=\"\">\n                            {currency +\n                              \" \" +\n                              this.getNewPrices(\n                                data.products,\n                                el.elemId,\n                                el.count\n                              )}\n                            {/* {el.elem.price} */}\n                          </div>\n                          <div className=\"\">\n                            <img\n                              width=\"60\"\n                              src={el.elem.image_url}\n                              alt={el.elem.title}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                  <div>\n                    <b>\n                      Sum Total:{\" \"}\n                      {this.totalPrice(data.products, this.state.cart)}\n                    </b>\n                  </div>\n                </div>\n              );\n            }}\n          </Query>\n          {/* {data.products.map(e=>(\n                      <>\n                        {e.price}\n                      </>\n                    ))} */}\n        </Drawer>\n      </>\n    );\n  }\n}\n\nexport default SideBar;\n","import React, { Component } from \"react\";\n// import { addTodoQuery } from '../queries/Queries';\nimport Navbar from \"./Navbar\";\nimport Products from \"./Products\";\nimport SideBar from \"./Sidebar\";\nimport \"../App.css\";\nimport { Query } from \"react-apollo\";\nimport { fetchProductsQuery } from \"../queries/Queries\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currency: \"EUR\",\n      selectedElem: {},\n      drawerTog: false,\n    };\n  }\n\n  currencySetValue = (e) => {\n    this.setState({ currency: e });\n  };\n\n  drawerToggle = (e) => {\n    this.setState({ drawerTog: e });\n  };\n  getElemData = (e) => {\n    console.log(\"dssd\", e);\n    this.setState({ selectedElem: e });\n  };\n\n  render() {\n    let { currency, drawerTog, selectedElem } = this.state;\n    return (\n      <div>\n        <Navbar />\n        <SideBar\n          drawer={drawerTog}\n          setDrawerToggle={this.drawerToggle}\n          addToCart={selectedElem}\n          currency={this.currencySetValue}\n        />\n        <div className=\"container\">\n          <div className=\"row\">\n            <Query query={fetchProductsQuery} variables={{ currency }}>\n              {({ loading, error, data }) => {\n                if (loading) {\n                  return <option>loading ...</option>;\n                }\n                if (error) {\n                  return <p>error</p>;\n                }\n                return data.products.map((elem) => (\n                  <div className=\"col-md-4 col-sm-6 col-xs-6 py-5\">\n                    <Products\n                      setDrawerToggle={this.drawerToggle}\n                      setElemData={this.getElemData}\n                      elem={elem}\n                      currency={currency}\n                    />\n                  </div>\n                ));\n              }}\n            </Query>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport { ApolloClient } from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport Dashboard from \"./components/Dashboard\";\nimport { vars } from \"./constants\";\nimport \"./App.css\";\n\n// Create an http link:\nconst link = new HttpLink({\n  uri: vars.GRAPHQL_ENDPOINT,\n});\n\n// Instantiate client\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <div className=\"App container-fluid\">\n          <Switch>\n            <Route path=\"/\" exact={true} component={Dashboard} />\n          </Switch>\n        </div>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","export const vars = {\n  GRAPHQL_ENDPOINT: \"https://pangaea-interviews.now.sh/api/graphql\",\n};\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"react-app-polyfill/ie9\"; // For IE 9-11 support\nimport \"react-app-polyfill/ie11\"; // For IE 11 support\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nrequire(\"dotenv\").config();\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}